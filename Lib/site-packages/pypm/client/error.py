# Copyright (c) 2009 ActiveState Software Inc.
# See http://www.activestate.com/activepython/license-agreement for licensing
# information.

from pypm.common.util import wrapped


class PyPMClientError(Exception): pass


class PackageNotFound(PyPMClientError):
    """Package not found in the repositories"""
    
    def __init__(self, requirement, required_by=None):
        msg =  'no such package "%s"; see pypm.activestate.com' % requirement
        if required_by:
            msg += '; required by "%s"' % required_by
        super(PackageNotFound, self).__init__(wrapped(msg))
        


class NoPackageInstalled(PyPMClientError):
    """No such package installed"""

    def __init__(self, name, version):
        msg = 'package "{0}{1}" is not installed'.format(
            name,
            '-'+version if version else '')
        super(NoPackageInstalled, self).__init__(wrapped(msg))



class PackageAccessError(PyPMClientError):
    """Errors related to accessing a package from ActiveState repository
    
    Eg: If a Business Edition subscription is expired, one cannot install
    the BE package.
    """
    
    def __init__(self, p, reason, msg):
        """
        - p:       The package that failed to install
        - reason:  The actual reason for the failure
        - msg:     The diagnostic message we show to the user; separated by \n
        """
        self.p = p
        self.reason = reason
        self.msg = msg
        
    def __str__(self):
        tmpl = r'''Can't install {self.p.full_name}: {self.reason}

{starred_msg}'''
        return tmpl.format(
            self=self,
            starred_msg = '*** ' + ('\n*** '.join(self.msg.splitlines())))
    
